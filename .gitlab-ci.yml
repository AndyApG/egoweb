update_dev:
  stage: build
  allow_failure: false
  only:
    refs:
      - dev
  before_script:
     ##
   ## Install ssh-agent if not already installed, it is required by Docker.
   ## (change apt-get to yum if you use an RPM-based image)
   ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

   ##
   ## Run ssh-agent (inside the build environment)
   ##
    - eval $(ssh-agent -s)

   ##
   ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
   ## We're using tr to fix line endings which makes ed25519 keys work
   ## without extra base64 encoding.
   ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
   ##
   # - mkdir -p ~/.ssh
   # - chmod 700 ~/.ssh
    #- ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 --decode)
   # - ssh-add -L
   # - ssh -o StrictHostKeyChecking=no boxy.rand.org
   ##
   ## Create the SSH directory and give it the right permissions
   ##

    #- mkdir /tmp/$CI_JOB_ID
    #- cp -r * /tmp/$CI_JOB_ID
  script:
  - cp -r /tmp/$CI_JOB_ID/app/* /var/www/html/egoweb;
    mkdir -p /var/www/html/egoweb/assets;
    mkdir -p /var/www/html/egoweb/protected/runtime;
  environment:
    name: dev
    url: http://egowebdev.rand.org/

update_alp_dev:
  stage: build
  allow_failure: false
  only:
    refs:
    - alpdev
  before_script:
  - ssh boxy.rand.org "mkdir $CI_JOB_ID"
  - scp -r * boxy.rand.org:$CI_JOB_ID
  script:
  - ssh boxy.rand.org "cp -r $CI_JOB_ID/app/* /var/www/html/alpegoweb;
    mkdir -p /var/www/html/alpegoweb/assets;
    mkdir -p /var/www/html/alpegoweb/protected/runtime;"
  environment:
    name: alp_dev
    url: $ALP_DEV_URL

test_alp_dev:
  stage: test
  allow_failure: false
  only:
    refs:
      - alpdev
  script:
    - cp -r ./test/wdio.conf.TEMPLATE.js ./test/wdio.conf.js
    - sed -i "s/CONFIG_ADMINUSER/$TEST_ALP_DEV_ADMIN_USER/g" ./test/wdio.conf.js
    - sed -i "s/CONFIG_ADMINPASSWORD/$TEST_ALP_DEV_ADMIN_PASSWD/g" ./test/wdio.conf.js
    - sed -i "s/CONFIG_INTERVIEWERUSER/$TEST_ALP_DEV_USER/g" ./test/wdio.conf.js
    - sed -i "s/CONFIG_INTERVIEWERPASSWORD/$TEST_ALP_DEV_PASSWD/g" ./test/wdio.conf.js
    - sed -i "s~CONFIG_PHANTOMJS_PATH~/home/gitlab-runner/.local/bin/phantomjs~g" ./test/wdio.conf.js
    - sed -i "s~CONFIG_BASEURL~$ALP_DEV_URL~g" ./test/wdio.conf.js
    - cd ./test
    - npm install
    - ./node_modules/.bin/wdio wdio.conf.js
  artifacts:
    reports:
      junit: ./test/junitresults/WDIO*.xml
  environment:
    name: alp_dev
    url: $ALP_DEV_URL

test_alp_dev_api:
  stage: test
  allow_failure: false
  only:
    refs:
      - alpdev
  script:
    - php ./test/APITest/testAPI.php $ALP_DEV_URL $ALP_DEV_PASSWD $TEST_ALP_DEV_SURVEY_ID
  environment:
    name: alp_dev
    url: $ALP_DEV_URL

update_alp_prod:
  stage: deploy
  allow_failure: false
  only:
    refs:
    - alp
  before_script:
  - ssh smgolding.randcorp.org "mkdir $CI_JOB_ID"
  - scp -r * smgolding.randcorp.org:$CI_JOB_ID
  script:
  - ssh smgolding.randcorp.org "rm -rf backup;
    mkdir -p backup;
    yes | cp -rf  /var/www/alpegoweb backup;
    yes | cp -rf $CI_JOB_ID/app/* /var/www/alpegoweb;
    mkdir -p /var/www/alpegoweb/assets;
    mkdir -p /var/www/alpegoweb/protected/runtime;"
  environment:
    name: alp_prod
    url: http://alpegoweb.rand.org/
  when: manual
